import React, { Component } from 'react'

import ProjectList1 from '../projects/ProjectList1'

import { connect } from 'react-redux'
import { firestoreConnect } from 'react-redux-firebase'
import { compose } from 'redux'
import { Redirect } from 'react-router-dom'
import { Link } from 'react-router-dom'
import ProjectSummary1 from '../projects/ProjectSummary1'

class Dashboard extends Component {  
  constructor(props) {
    super(props);
    this.state = {
      data1:this.props.projects,
      showing:true,
      value: ''
    }
  }
  handleChange = event => {
    const { value } = event.target;
    this.setState({ value });
  };
  
  render() {    

    const { projects,err,auth,value } = this.props;
  
    //if (!projects) return <Redirect to='/edit' />  
    
if (projects){
  let Reslt=this.props.projects.filter(
    (projet)=>{return projet.id.indexOf(this.state.value)!==-1||projet.Notes.indexOf(this.state.value)!==-1}
    ) 
     
    console.log('Reslt')
    console.log(Reslt)
    return (
      <div className="dashboard container">
        {this.state.showing 
      ? <div>This is visible</div>
      : null
  }
        <div className="row">
      {/*  <div className="col s12 m2">
            <Notifications notifications={notifications} />
    </div>
          <div className="col s12 m2">
            <ProjectList projects={projects} />
    </div> */}
            <input type="text" value={value} onChange={this.handleChange} />
          <div className="col s12 m2">
         { Reslt.map(project3 => {
           return(
            <Link to={'/edit/' + project3.id} key={project3.id}>
            < ProjectSummary1 project4={project3} />
            </Link>)

         })}
            <ProjectList1 projects={projects} />
          </div>
        </div>
      </div>
    )
  }
  else{
    return(<h1>ha ha ha ....</h1>)
  }
  }
}

const mapStateToProps = (state) => {
  console.log('dashbord--.js mapStateToProps')
  return {
    projects: state.firestore.ordered.ganesh,
    auth: state.firebase.auth
  
  }
}

export default compose(
  connect(mapStateToProps),
  firestoreConnect([
    { collection: 'ganesh',where: ['radyon','==', 'No']}
   
  ])
)(Dashboard)
